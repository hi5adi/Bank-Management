package com.hi5adii.demos;import java.util.Scanner;public class Main{    public static void main(String[] args)    {        Scanner sc = new Scanner(System.in);        // Assuming 10 accounts        Account[] arr = new Account[10];        int accountCount = 0;        while (true)        {            System.out.println("\u001B[36m+--------------------------------------+");            System.out.println("|            \u001B[32mNIRA BANK\u001B[36m                 |");            System.out.println("+-------+\u001B[36m------------------------------+");            System.out.println("| \u001B[31mSr No.\u001B[36m |          \u001B[31mOptions\u001B[36m            |");            System.out.println("+-------+\u001B[36m------------------------------+");            System.out.println("|   \u001B[31m1\u001B[36m   | \u001B[31mCreate Savings Account       \u001B[36m|");            System.out.println("|   \u001B[31m2\u001B[36m   | \u001B[31mCreate Salary Account        \u001B[36m|");            System.out.println("|   \u001B[31m3\u001B[36m   | \u001B[31mCreate Current Account       \u001B[36m|");            System.out.println("|   \u001B[31m4\u001B[36m   | \u001B[31mCreate Loan Account          \u001B[36m|");            System.out.println("|   \u001B[31m5\u001B[36m   | \u001B[31mPerform Transaction          \u001B[36m|");            System.out.println("|   \u001B[31m6\u001B[36m   | \u001B[31mFund Transfer                \u001B[36m|");            System.out.println("|   \u001B[31m7\u001B[36m   | \u001B[31mDisplay Daily Report         \u001B[36m|");            System.out.println("|   \u001B[31m8\u001B[36m   | \u001B[31mAll A/C INFO                 \u001B[36m|");            System.out.println("|   \u001B[31m9\u001B[36m   | \u001B[31mExit                         \u001B[36m|");            System.out.println("+-------+\u001B[36m------------------------------+\u001B[0m");            int choice = sc.nextInt();            switch (choice)            {                case 1:                    System.out.print("Enter account holder name: ");                    String holderName = sc.next();                    System.out.print("Enter initial balance: ");                    double initialBalance = sc.nextDouble();                    arr[accountCount++] = new SavingAccount("SAV" + (accountCount + 100), holderName, initialBalance);                    System.out.println("Savings Account created successfully!");                    break;                case 2:                    System.out.print("Enter account holder name: ");                    holderName = sc.next();                    System.out.print("Enter initial balance: ");                    initialBalance = sc.nextDouble();                    SalaryAccount salaryAccount = new SalaryAccount("SAL" + (accountCount + 100), holderName, initialBalance);                    salaryAccount.checkActivityOfSalaryAccount();  // Check activity status                    arr[accountCount++] = salaryAccount;                    System.out.println("Salary Account created successfully!");                    break;                case 3:                    System.out.print("Enter account holder name: ");                    holderName = sc.next();                    System.out.print("Enter initial balance: ");                    initialBalance = sc.nextDouble();                    System.out.print("Enter overdraft limit: ");                    double overdraftLimit = sc.nextDouble();                    arr[accountCount++] = new CurrentAccount("CUR" + (accountCount + 100), holderName, initialBalance, overdraftLimit);                    System.out.println("Current Account created successfully!");                    break;                case 4:                    System.out.print("Enter account holder name: ");                    holderName = sc.next();                    System.out.print("Enter loan amount: ");                    double loanAmount = sc.nextDouble();                    arr[accountCount++] = new LoanAccount("LOAN" + (accountCount + 100), holderName, loanAmount);                    System.out.println("Loan Account created successfully!");                    break;                case 5:                    System.out.print("Enter account number: ");                    String accountNumber = sc.next();                    System.out.print("1. Deposit\n2. Withdraw\n3. Calculate Interest\nChoose transaction type: ");                    int transactionType = sc.nextInt();                    System.out.print("Enter transaction amount: ");                    double transactionAmount = sc.nextDouble();                    // Find the account                    Account selectedAccount = null;                    for (int i = 0; i < accountCount; i++) {                        if (arr[i].accountNumber.equals(accountNumber)) {                            selectedAccount = arr[i];                            break;                        }                    }                    if (selectedAccount != null) {                        Transaction.performTransaction(selectedAccount, transactionType, transactionAmount);                        selectedAccount.recordTransaction(Transaction.getTransactionTypeString(transactionType), transactionAmount);                    } else {                        System.out.println("Account not found.");                    }                    break;                case 6:                    System.out.print("Enter your account number: ");                    String sourceAccountNumber = sc.next();                    System.out.print("Enter account number to Transfer: ");                    String destinationAccountNumber = sc.next();                    System.out.print("Enter amount to transfer: ");                    double transferAmount = sc.nextDouble();                    // Find the source account                    Account sourceAccount = null;                    for (int i = 0; i < accountCount; i++) {                        if (arr[i].accountNumber.equals(sourceAccountNumber)) {                            sourceAccount = arr[i];                            break;                        }                    }                    // Find the destination account                    Account destinationAccount = null;                    for (int i = 0; i < accountCount; i++) {                        if (arr[i].accountNumber.equals(destinationAccountNumber)) {                            destinationAccount = arr[i];                            break;                        }                    }                    if (sourceAccount != null && destinationAccount != null) {                        Transaction.transferFunds(sourceAccount, destinationAccount, transferAmount);                        sourceAccount.recordTransaction("Transfer To Another A/C", transferAmount);                        destinationAccount.recordTransaction("Transfer In", transferAmount);                    } else {                        System.out.println("Source or destination account not found.");                    }                    break;                case 7:                    System.out.println("\n**** Daily Report ****");                    for (int i = 0; i < accountCount; i++)                    {                        arr[i].printAccountInfo();                        System.out.println("Transaction Details : - ");                        arr[i].viewTransactions();                        System.out.println("-----------------------------");                    }                    break;                case 8:                    Transaction.displayAllAccountsInformation(arr,accountCount);                    break;                case 9:                    System.out.println("Exiting program. Thank you!");                    System.exit(0);                    break;                default:                    System.out.println("Invalid choice. Please try again.");            }        }    }}